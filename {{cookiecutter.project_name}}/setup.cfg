[metadata]
name = {{cookiecutter.project_name}}
version = attr: {{cookiecutter.package_name}}.__version__

author = {{cookiecutter.full_name}}
author_email = {{cookiecutter.email}}
url = {{cookiecutter.git_url}}

description = {{cookiecutter.project_description}}
keywords =

{%- if cookiecutter.open_source == 'y' %}
license = MIT License
license_file = LICENSE
{%- endif %}
classifiers =
    {%- if cookiecutter.open_source == 'y' %}
    License :: OSI Approved :: MIT License
    {%- else %}
    Private :: Do Not Upload
    {%- endif %}
    Programming Language :: Python :: {{cookiecutter.python_version}}
    Programming Language :: Python :: Implementation :: PyPy

[options]
packages = find:

[tool:pytest]
testpaths = tests {%- if cookiecutter.docs == 'y' %} docs/conf.py {%- endif %}
norecursedirs =
    .*/
    docs/

[flake8]
max-line-length = {{cookiecutter.python_max_line_length}}
exclude =
    .git/,
    docs/

[coverage:run]
branch = True
source =
    {{cookiecutter.package_name}}/

[mypy]
check_untyped_defs = yes

{% if cookiecutter.open_source == 'y' -%}
[tox:tox]
envlist=py{{ cookiecutter.python_version.replace('.', '') }}

[testenv]
passenv = HOME
deps =
    pipenv
commands=
    pipenv install --dev
    pipenv run test
{%- endif %}

[bumpr]
file = {{cookiecutter.package_name}}/__init__.py
files = setup.py
tests = pytest
vcs = git
;publish = python setup.py sdist upload
verbose = yes

[bumpr:bump]
part = patch
